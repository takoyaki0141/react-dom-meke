<?php
/**
 * フロントエンド用セキュリティヘッダー
 */
function setSecurityHeadersForHTML(): void {
    header('Expires: -1');
    header('Cache-Control: no-store');
    header('Content-Type: text/html; charset=UTF-8');
    header('X-Content-Type-Options: nosniff');
    header('X-Frame-Options: SAMEORIGIN');
    header('Referrer-Policy: same-origin');
    header('Permissions-Policy: interest-cohort=()');
    header("Content-Security-Policy: default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; frame-ancestors 'self';");
}

/**
 * API（バックエンド）用セキュリティヘッダー
 */
function setSecurityHeadersForAPI(): void {
    header('Expires: -1');
    header('Cache-Control: no-store');
    header('Content-Type: application/json; charset=UTF-8');
    header('X-Content-Type-Options: nosniff');
    header('X-Frame-Options: SAMEORIGIN');
    header('Referrer-Policy: same-origin');
    header('Permissions-Policy: interest-cohort=()');
    header("Content-Security-Policy: default-src 'none'; script-src 'none'; style-src 'none'; frame-ancestors 'none';");
}

あ
<?php
require_once '../common/securityHeaders.php';
setSecurityHeadersForHTML();
?>


あ

ながれ

session_start();
if (!isset($_SESSION['csrf_token'])) {
    $_SESSION['csrf_token'] = bin2hex(random_bytes(32)); // 安全な乱数生成
}

<meta name="csrf-token" content="<?= $_SESSION['csrf_token'] ?>">


const csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content');
formData.append("csrf_token", csrfToken);

session_start();
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    if (!isset($_POST['csrf_token']) || $_POST['csrf_token'] !== $_SESSION['csrf_token']) {
        http_response_code(403);
        echo json_encode(["error" => "不正なリクエスト（CSRF検出）"]);
        exit;
    }

    // 正常なリクエストなので処理を継続
}



